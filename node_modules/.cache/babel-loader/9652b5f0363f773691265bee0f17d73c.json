{"ast":null,"code":"var _jsxFileName = \"/Users/shirley/Desktop/react-project/react-mvc/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, Fragment, useCallback, useEffect } from \"react\";\nimport TodoItem from \"./component/TodoItem\";\nimport Header from \"./component/Header\";\nimport { FilterType, EnterType } from \"./component/type/Type\";\nimport Footer from \"./component/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const getLocalStorage = localStorage.getItem(\"todoList\");\n  let parsedToDos = [];\n\n  if (getLocalStorage !== null) {\n    parsedToDos = JSON.parse(getLocalStorage);\n  }\n\n  const [todoList, setTodoList] = useState(parsedToDos);\n  const [filterValue, setFilterValue] = useState(\"all\");\n  const onKeyworldChange = useCallback(e => {\n    setText(e.target.value.trim());\n  }, []);\n  const onKeyworld = useCallback(e => {\n    if (e.key === EnterType.ENTER_TYPE) {\n      setTodoList([...todoList, {\n        id: todoList.reduce((max, todo) => Math.max(todo.id, max), -1) + 1,\n        title: text,\n        completed: false\n      }]);\n      setText(\"\");\n    }\n  }, [text, todoList]);\n  const deleteTodo = useCallback(id => {\n    setTodoList(todoList.filter(item => item.id !== id));\n  }, [todoList]);\n  const completeFlag = useCallback(id => {\n    setTodoList(todoList.map(item => item.id === id ? { ...item,\n      completed: !item.completed\n    } : item));\n  }, [todoList]);\n  const onFilterList = useCallback(filter => {\n    return setFilterValue(filter);\n  }, []);\n  const getFilteredTodos = useCallback(filter => {\n    if (filter === FilterType.ACTIVE) {\n      return todoList.filter(item => item.completed === false);\n    } else if (filter === FilterType.COMPLETED) {\n      return todoList.filter(item => item.completed === true);\n    } else {\n      return todoList;\n    }\n  }, [todoList]);\n  const onClearCompleted = useCallback(() => {\n    setTodoList(todoList.filter(item => item.completed === false));\n  }, [todoList]);\n  const listLength = todoList.length;\n  const completedLength = todoList.filter(item => item.completed === false).length;\n  const completedAll = useCallback(() => {\n    const completeData = todoList.every(item => item.completed);\n    setTodoList(todoList.map(item => ({ ...item,\n      completed: !completeData\n    })));\n  }, [todoList]);\n  const textUpdate = useCallback((e, id) => {\n    setTodoList(todoList.map(items => items.id === id ? { ...items,\n      title: e.target.value\n    } : items));\n  }, [todoList]);\n  useEffect(() => {\n    window.localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n  }, [todoList]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        text: text,\n        onKeyUp: onKeyworld,\n        onChange: onKeyworldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"toggle-all\",\n          className: \"toggle-all\",\n          type: \"checkbox\",\n          checked: listLength - completedLength === listLength\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"toggle-all\",\n          onClick: completedAll,\n          children: \"Mark all as complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"todo-list\",\n          children: getFilteredTodos(filterValue).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TodoItem, {\n              title: item.title,\n              completed: item.completed,\n              onChange: () => completeFlag(item.id),\n              onClick: () => deleteTodo(item.id),\n              onBlur: e => textUpdate(e, item.id),\n              onKeyUp: e => textUpdate(e, item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        filterValue: filterValue,\n        completedLength: completedLength,\n        onClearCompleted: onClearCompleted,\n        onFilterList: onFilterList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Hj344eSDYizPFfYGj+d0QNKng+w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shirley/Desktop/react-project/react-mvc/src/App.tsx"],"names":["React","useState","Fragment","useCallback","useEffect","TodoItem","Header","FilterType","EnterType","Footer","App","text","setText","getLocalStorage","localStorage","getItem","parsedToDos","JSON","parse","todoList","setTodoList","filterValue","setFilterValue","onKeyworldChange","e","target","value","trim","onKeyworld","key","ENTER_TYPE","id","reduce","max","todo","Math","title","completed","deleteTodo","filter","item","completeFlag","map","onFilterList","getFilteredTodos","ACTIVE","COMPLETED","onClearCompleted","listLength","length","completedLength","completedAll","completeData","every","textUpdate","items","window","setItem","stringify"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, {\n  useState,\n  Fragment,\n  useCallback,\n  useEffect,\n  SetStateAction,\n} from \"react\";\nimport TodoItem from \"./component/TodoItem\";\nimport Header from \"./component/Header\";\nimport { FilterType, EnterType } from \"./component/type/Type\";\nimport Footer from \"./component/Footer\";\n\ntype TodoListProps = {\n  id: number;\n  title: string;\n  completed: boolean;\n};\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n\n  const getLocalStorage = localStorage.getItem(\"todoList\");\n\n  let parsedToDos = [];\n\n  if (getLocalStorage !== null) {\n    parsedToDos = JSON.parse(getLocalStorage);\n  }\n\n  const [todoList, setTodoList] = useState<TodoListProps[]>(parsedToDos);\n\n  const [filterValue, setFilterValue] = useState(\"all\");\n\n  const onKeyworldChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setText(e.target.value.trim());\n    },\n    []\n  );\n\n  const onKeyworld = useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === EnterType.ENTER_TYPE) {\n        setTodoList([\n          ...todoList,\n          {\n            id: todoList.reduce((max, todo) => Math.max(todo.id, max), -1) + 1,\n            title: text,\n            completed: false,\n          },\n        ]);\n\n        setText(\"\");\n      }\n    },\n    [text, todoList]\n  );\n\n  const deleteTodo = useCallback(\n    (id: number) => {\n      setTodoList(todoList.filter((item) => item.id !== id));\n    },\n    [todoList]\n  );\n\n  const completeFlag = useCallback(\n    (id: number) => {\n      setTodoList(\n        todoList.map((item) =>\n          item.id === id ? { ...item, completed: !item.completed } : item\n        )\n      );\n    },\n    [todoList]\n  );\n\n  const onFilterList = useCallback((filter: SetStateAction<string>) => {\n    return setFilterValue(filter);\n  }, []);\n\n  const getFilteredTodos = useCallback(\n    (filter: string) => {\n      if (filter === FilterType.ACTIVE) {\n        return todoList.filter((item) => item.completed === false);\n      } else if (filter === FilterType.COMPLETED) {\n        return todoList.filter((item) => item.completed === true);\n      } else {\n        return todoList;\n      }\n    },\n    [todoList]\n  );\n\n  const onClearCompleted = useCallback(() => {\n    setTodoList(todoList.filter((item) => item.completed === false));\n  }, [todoList]);\n\n  const listLength = todoList.length;\n\n  const completedLength = todoList.filter(\n    (item) => item.completed === false\n  ).length;\n\n  const completedAll = useCallback(() => {\n    const completeData = todoList.every((item) => item.completed);\n    setTodoList(\n      todoList.map((item) => ({ ...item, completed: !completeData }))\n    );\n  }, [todoList]);\n\n  const textUpdate = useCallback(\n    (e: any, id: number): void => {\n      setTodoList(\n        todoList.map((items) =>\n          items.id === id ? { ...items, title: e.target.value } : items\n        )\n      );\n    },\n    [todoList]\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n  }, [todoList]);\n\n  return (\n    <Fragment>\n      <section className=\"todoapp\">\n        <Header text={text} onKeyUp={onKeyworld} onChange={onKeyworldChange} />\n        <section className=\"main\">\n          <input\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={listLength - completedLength === listLength}\n          />\n          <label htmlFor=\"toggle-all\" onClick={completedAll}>\n            Mark all as complete\n          </label>\n          <ul className=\"todo-list\">\n            {getFilteredTodos(filterValue).map((item) => (\n              <div key={item.id}>\n                <TodoItem\n                  title={item.title}\n                  completed={item.completed}\n                  onChange={() => completeFlag(item.id)}\n                  onClick={() => deleteTodo(item.id)}\n                  onBlur={(e) => textUpdate(e, item.id)}\n                  onKeyUp={(e) => textUpdate(e, item.id)}\n                />\n              </div>\n            ))}\n          </ul>\n        </section>\n        <Footer\n          filterValue={filterValue}\n          completedLength={completedLength}\n          onClearCompleted={onClearCompleted}\n          onFilterList={onFilterList}\n        />\n      </section>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}