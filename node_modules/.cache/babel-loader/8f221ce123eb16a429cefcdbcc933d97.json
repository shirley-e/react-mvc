{"ast":null,"code":"var _jsxFileName = \"/Users/shirley/Desktop/react-project/react-mvc/src/component/TodoItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoItem({\n  title,\n  completed,\n  onChange,\n  onClick,\n  onBlur,\n  onKeyUp\n}) {\n  _s();\n\n  const [editor, setEditor] = useState(false);\n  const [text, setText] = useState(title);\n\n  const doubleClickTitleUpdate = () => {\n    setEditor(prevState => !prevState);\n  };\n\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleBlur = e => {\n    setEditor(false);\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);\n  };\n\n  const handleKeyUp = e => {\n    if (e.key === \"Enter\") {\n      setEditor(false);\n      onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: completed ? \"completed\" : editor === true ? \"editing\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\",\n        checked: completed,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        onDoubleClick: doubleClickTitleUpdate,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"destroy\",\n        onClick: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"edit\",\n      type: \"text\",\n      value: text,\n      onChange: handleTextChange,\n      onBlur: handleBlur,\n      onKeyUp: handleKeyUp,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoItem, \"tFbvtw7Xi8LDWY8SAdRXZAMZ2Sw=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/shirley/Desktop/react-project/react-mvc/src/component/TodoItem.tsx"],"names":["React","useState","TodoItem","title","completed","onChange","onClick","onBlur","onKeyUp","editor","setEditor","text","setText","doubleClickTitleUpdate","prevState","handleTextChange","e","target","value","handleBlur","handleKeyUp","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoCC,QAApC,QAAoD,OAApD;;;AAUA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,KADgB;AAEhBC,EAAAA,SAFgB;AAGhBC,EAAAA,QAHgB;AAIhBC,EAAAA,OAJgB;AAKhBC,EAAAA,MALgB;AAMhBC,EAAAA;AANgB,CAAlB,EAOkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACE,KAAD,CAAhC;;AAEA,QAAMU,sBAAsB,GAAG,MAAM;AACnCH,IAAAA,SAAS,CAAEI,SAAD,IAAe,CAACA,SAAjB,CAAT;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,CAAD,IAEnB;AACJJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAJD;;AAMA,QAAMC,UAAU,GAAIH,CAAD,IAA2C;AAC5DN,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAH,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAGS,CAAH,CAAN;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAIJ,CAAD,IAA8C;AAChE,QAAIA,CAAC,CAACK,GAAF,KAAU,OAAd,EAAuB;AACrBX,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAGQ,CAAH,CAAP;AACD;AACF,GALD;;AAOA,sBACE;AAAI,IAAA,SAAS,EAAEZ,SAAS,GAAG,WAAH,GAAiBK,MAAM,KAAK,IAAX,GAAkB,SAAlB,GAA8B,EAAvE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,OAAO,EAAEL,SAHX;AAIE,QAAA,QAAQ,EAAEC;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAO,QAAA,aAAa,EAAEQ,sBAAtB;AAAA,kBAA+CV;AAA/C;AAAA;AAAA;AAAA;AAAA,cAPF,eASE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAEG;AAArC;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEK,IAHT;AAIE,MAAA,QAAQ,EAAEI,gBAJZ;AAKE,MAAA,MAAM,EAAEI,UALV;AAME,MAAA,OAAO,EAAEC,WANX;AAOE,MAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA1DQlB,Q;;KAAAA,Q;AA4DT,eAAeA,QAAf","sourcesContent":["import React, { ChangeEventHandler, useState } from \"react\";\n\ninterface TodoItemProps {\n  title: string;\n  completed: boolean;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n  onClick: () => void;\n  onBlur?: (...args: any[]) => any;\n  onKeyUp?: (...args: any[]) => any;\n}\nfunction TodoItem({\n  title,\n  completed,\n  onChange,\n  onClick,\n  onBlur,\n  onKeyUp,\n}: TodoItemProps) {\n  const [editor, setEditor] = useState<boolean>(false);\n  const [text, setText] = useState(title);\n\n  const doubleClickTitleUpdate = () => {\n    setEditor((prevState) => !prevState);\n  };\n\n  const handleTextChange = (e: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setText(e.target.value);\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    setEditor(false);\n    onBlur?.(e);\n  };\n\n  const handleKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      setEditor(false);\n      onKeyUp?.(e);\n    }\n  };\n\n  return (\n    <li className={completed ? \"completed\" : editor === true ? \"editing\" : \"\"}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={completed}\n          onChange={onChange}\n        />\n        <label onDoubleClick={doubleClickTitleUpdate}>{title}</label>\n\n        <button className=\"destroy\" onClick={onClick} />\n      </div>\n\n      <input\n        className=\"edit\"\n        type=\"text\"\n        value={text}\n        onChange={handleTextChange}\n        onBlur={handleBlur}\n        onKeyUp={handleKeyUp}\n        autoFocus\n      />\n    </li>\n  );\n}\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}